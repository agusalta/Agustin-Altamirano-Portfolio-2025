<div class="div9">
    <div class="marquee">
        <!-- Contenido original -->
        <object class="svg-object" type="image/svg+xml" data="./assets/CODERHOUSE.svg" aria-label="Logo de Codershouse"></object>
        <object class="svg-object" type="image/svg+xml" data="./assets/ORT.svg" aria-label="Logo de ORT"></object>
        <object class="svg-object" type="image/svg+xml" data="./assets/UTN.svg" aria-label="Logo de UTN"></object>

    </div>
</div>

<style is:inline>
    .div9 {
        width: 100%; 
        height: 150px; 
        overflow: hidden; 
        position: relative;
        background: var(--icons); 
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); 
        cursor: crosshair;
    }

    .marquee {
        display: flex; 
        animation: scroll 20s linear infinite; 
        position: absolute;
        white-space: nowrap; 
 
    }

    .svg-object {
        width: auto; 
        height: auto;
        margin-right: 50px; 
        filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.2)); 
        transition: transform 0.3s ease; 
    }

    .svg-object:hover {
        transform: scale(1.1); 
    }

    @keyframes scroll {
        0% {
            transform: translateX(0); 
        }
        100% {
            transform: translateX(-50%); /
        }
    }
</style>

<script is:inline data-astro-rerun>
    document.addEventListener("DOMContentLoaded", function () {
        document.addEventListener('astro:page-load', () => {
        const marquee = document.querySelector(".marquee");
        if (!marquee) return;
        
        const items = Array.from(marquee.children); // Aseguramos el tipo correcto

        function duplicateItems() {
            if (!marquee) return;
            let totalWidth = 0;
            
            items.forEach(item => {
                totalWidth += (item).offsetWidth + 50; // Convertimos `item` a `HTMLElement`
            });

            while (totalWidth < window.innerWidth * 2) {
                items.forEach(item => {
                    let clone = item.cloneNode(true);
                    marquee.appendChild(clone);
                });
                totalWidth *= 2;
            }
        }

        duplicateItems();
        });
    });

</script>